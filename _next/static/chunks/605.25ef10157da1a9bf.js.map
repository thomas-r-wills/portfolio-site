{"version":3,"file":"static/chunks/605.25ef10157da1a9bf.js","mappings":"iJAMA,IAAMA,EAAoBC,IACxB,IAAMC,EAAOC,MAAMC,IAAI,CAACH,GAAOI,MAAM,CAAC,CAACC,EAAKC,IAASD,EAAMC,EAAKC,UAAU,CAAC,GAAI,GAG/E,MAAO,2BAAsCC,MAAAA,CAAXC,OAFK,OAAT,EAAR,EAAa,IAAI,eAEE,MAAW,OAAPD,OADN,OAAT,EAAR,EAAa,IAAI,eACa,IACtD,EAwFA,EAnEkC,MAmEnBE,CAnEoB,GAmEhBA,EAAC,CAlElBC,CAAI,CACJC,OAAK,YACLC,CAAU,WACVC,CAAS,YACTC,CAAU,cACVC,CAAY,CACb,GACOC,EAAUJ,EAAa,4BAA8B,4BAIrDK,EAAkBP,EAAKQ,cAAc,EAAIR,EAAKS,aAAa,CAC7D,OAA6D,OAAtDP,EAAaF,EAAKS,aAAa,CAAGT,EAAKQ,cAAc,CAAC,KAC7DpB,EAAiBY,EAAKU,IAAI,EAAI,GAAS,OAANT,IAErC,MACE,WAACU,MAAAA,CAECC,UAAW,oDAEeN,MAAAA,CADxB,CAACH,GAAa,iBACf,2BAAiC,OAARG,EAAQ,+FAClCO,QAAS,IAAMT,EAAWC,EAAcJ,aAGxC,UAACU,MAAAA,CACCC,UAAU,iFACVE,MAAO,CACLP,kBACAQ,QAASf,EAAKgB,YAAY,CAAGhB,EAAKgB,YAAY,CAAGb,EAAY,GAAM,EACrE,IAIF,WAACQ,MAAAA,CAAIC,UAAU,0BACb,UAACK,KAAAA,CACCL,UAAW,+CAAuD,OAARN,GAC1DY,aAAYlB,EAAKU,IAAI,EAAI,yBAExBV,EAAKU,IAAI,EAAI,UAACS,OAAAA,CAAKC,cAAY,gBAAO,kBAEzC,UAACC,KAAAA,CAAAA,GACAlB,GAAaH,EAAKsB,IAAI,EACrB,iCACE,UAACC,IAAAA,CACCC,KAAMxB,EAAKsB,IAAI,CAACG,OAAO,CACvBC,OAAO,SACPC,IAAI,sBACJf,UAAW,OAAc,OAvCtBV,EAAa,4BAA8B,4BAuCrB,gCAExBF,EAAKsB,IAAI,CAACM,QAAQ,GAErB,UAACP,KAAAA,CAAAA,GACD,UAACA,KAAAA,CAAAA,MAGJlB,GAAaH,EAAK6B,WAAW,CAACC,GAAG,CAAC,CAACC,EAAM9B,IACxC,WAAC+B,EAAAA,QAAc,YACb,UAACC,IAAAA,CAAErB,UAAU,qBAAamB,IAC1B,UAACV,KAAAA,CAAAA,KAFkB,QAAc,OAANpB,UAvC5B,GAAgBA,MAAAA,CAAbD,EAAKU,IAAI,CAAC,KAAS,OAANT,GA+C3B,EChCA,EAvCwC,OAAC,EAuC1BiC,EAtCbC,CAAE,IAsCkBD,EAAC,CArCrBE,CAAK,cACL/B,CAAY,CACZgC,cAAY,YACZnC,CAAU,gBACVoC,CAAc,YACdlC,CAAU,CACX,GACOmC,EAAUrC,EACZ,MAA8C,OAAxCkC,EAAMI,WAAW,GAAGC,OAAO,CAAC,MAAO,KAAK,sBAC9C,MAA8C,OAAxCL,EAAMI,WAAW,GAAGC,OAAO,CAAC,MAAO,KAAK,sBAElD,MACE,iCACE,UAAC9B,MAAAA,CAAIC,UAAU,sCACf,UAAC8B,KAAAA,CACCP,GAAIA,EACJvB,UAAW,+CAAuD,OAAR2B,YAEzDH,IAEH,UAACzB,MAAAA,CAAIC,UAAU,6EACZyB,EAAaP,GAAG,CAAC,CAAC9B,EAAMC,IACvB,UAACF,EAAIA,CAEHC,CAFGD,IAEGC,EACNC,MAAOA,EACPC,WAAYA,EACZC,UAAWmC,CAAc,CAACjC,EAAa,CAACJ,EAAM,CAC9CG,WAAYA,EACZC,aAAcA,GANT,GAAiBJ,MAAAA,CAAdmC,EAAM,UAAc,OAANnC,SAYlC","sources":["webpack://_N_E/./src/app/card.tsx","webpack://_N_E/./src/app/section.tsx"],"sourcesContent":["// Copyright 2024 Thomas Wills\n// Licensed under the MIT License. See LICENSE file in the project root for full license information.\n\nimport React from 'react';\n\n// Utility function to generate a unique gradient based on the input\nconst generateGradient = (input: string) => {\n  const hash = Array.from(input).reduce((acc, char) => acc + char.charCodeAt(0), 0);\n  const color1 = `hsl(${(hash * 5) % 360}, 70%, 60%)`;\n  const color2 = `hsl(${(hash * 7) % 360}, 70%, 40%)`;\n  return `radial-gradient(circle, ${color1}, ${color2})`;\n};\n\ninterface CardProps {\n  item: {\n    name: string;\n    imagePathLight?: string;\n    imagePathDark?: string;\n    description: string[];\n    imageOpacity?: number;\n    link?: {\n      linkText: string;\n      linkUrl: string;\n    };\n  };\n  index: number;\n  isDarkMode: boolean;\n  cardState: boolean;\n  handleFlip: (section: number, index: number) => void;\n  sectionIndex: number;\n}\n\nconst Card: React.FC<CardProps> = ({\n  item,\n  index,\n  isDarkMode,\n  cardState,\n  handleFlip,\n  sectionIndex,\n}) => {\n  const bgColor = isDarkMode ? \"bg-zinc-900 text-gray-200\" : \"bg-zinc-100 text-gray-900\";\n  const linkBg = isDarkMode ? \"bg-gray-300 text-gray-900\" : \"bg-gray-700 text-gray-200\";\n\n  // Determine the background image or gradient\n  const backgroundImage = item.imagePathLight || item.imagePathDark\n    ? `url(${isDarkMode ? item.imagePathDark : item.imagePathLight})`\n    : generateGradient(item.name || `${index}`);\n\n  return (\n    <div\n      key={`${item.name}-${index}`}\n      className={`relative flex-shrink-0 w-80 h-80 border-zinc-300 ${\n        !cardState && \"hover:border-8\"\n      } hover:border-zinc-400 ${bgColor} border-4 m-2 rounded-lg shadow-lg p-4 flex flex-col items-center justify-start text-center`}\n      onClick={() => handleFlip(sectionIndex, index)}\n    >\n      {/* Image Overlay */}\n      <div\n        className=\"absolute inset-0 rounded hover:rounded-none overflow-hidden bg-cover bg-center\"\n        style={{\n          backgroundImage,\n          opacity: item.imageOpacity ? item.imageOpacity : cardState ? 0.1 : 0.9,\n        }}\n      ></div>\n\n      {/* Text Content */}\n      <div className=\"relative z-10\">\n        <h2\n          className={`text-lg font-bold opacity-80 px-1.5 rounded ${bgColor}`}\n          aria-label={item.name || \"Empty heading\"}\n        >\n          {item.name || <span aria-hidden=\"true\">Placeholder</span>}\n        </h2>\n        <br />\n        {cardState && item.link && (\n          <>\n            <a\n              href={item.link.linkUrl}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={`p-2 ${linkBg} rounded-md text-sm`}\n            >\n              {item.link.linkText}\n            </a>\n            <br />\n            <br />\n          </>\n        )}\n        {cardState && item.description.map((desc, index) => (\n          <React.Fragment key={`desc-${index}`}>\n            <p className=\"text-base\">{desc}</p>\n            <br />\n          </React.Fragment>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","// Copyright 2024 Thomas Wills\n// Licensed under the MIT License. See LICENSE file in the project root for full license information.\n\nimport React from 'react';\nimport Card from './card';\n\ninterface SectionProps {\n  id: string;\n  title: string;\n  sectionIndex: number;\n  sectionItems: {\n    name: string;\n    imagePathLight?: string;\n    imagePathDark?: string;\n    description: string[];\n    imageOpacity?: number;\n    link?: {\n      linkText: string;\n      linkUrl: string;\n    };\n  }[];\n  isDarkMode: boolean;\n  cardStateArray: boolean[][];\n  handleFlip: (section: number, index: number) => void;\n}\n\nconst Section: React.FC<SectionProps> = ({\n  id,\n  title,\n  sectionIndex,\n  sectionItems,\n  isDarkMode,\n  cardStateArray,\n  handleFlip,\n}) => {\n  const titleBg = isDarkMode\n    ? `bg-${title.toLowerCase().replace(/\\s/g, \"-\")}-800 text-gray-200`\n    : `bg-${title.toLowerCase().replace(/\\s/g, \"-\")}-200 text-gray-900`;\n\n  return (\n    <>\n      <div className=\"mt-[10rem] h-2 bg-zinc-400 w-full\"></div>\n      <h1\n        id={id}\n        className={`mt-5 text-4xl rounded w-60 h-10 text-center ${titleBg}`}\n      >\n        {title}\n      </h1>\n      <div className=\"m-8 flex flex-row flex-wrap justify-around contents-center w-full\">\n        {sectionItems.map((item, index) => (\n          <Card\n            key={`${title}-card-${index}`}\n            item={item}\n            index={index}\n            isDarkMode={isDarkMode}\n            cardState={cardStateArray[sectionIndex][index]}\n            handleFlip={handleFlip}\n            sectionIndex={sectionIndex}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Section;\n"],"names":["generateGradient","input","hash","Array","from","reduce","acc","char","charCodeAt","color2","color1","Card","item","index","isDarkMode","cardState","handleFlip","sectionIndex","bgColor","backgroundImage","imagePathLight","imagePathDark","name","div","className","onClick","style","opacity","imageOpacity","h2","aria-label","span","aria-hidden","br","link","a","href","linkUrl","target","rel","linkText","description","map","desc","React","p","Section","id","title","sectionItems","cardStateArray","titleBg","toLowerCase","replace","h1"],"sourceRoot":""}